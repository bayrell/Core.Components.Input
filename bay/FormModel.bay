/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.Crud;

use Runtime.BaseStruct;
use Runtime.Web.ApiResult;
use Runtime.Web.Crud.ValidationResult;


struct FormModel<T> extends BaseStruct
{
	T item = null;
	int item_id = 0;
	Dict dictionary = null;
    Dict params = null;
	int error_code = 0;
	string error_message = "";
	ValidationResult validation_result = null;
	
	
	/**
	 * Set wait message
	 */
	FormModel setWaitMessage()
	{
		FormModel model = this;
		
		model <= error_code <= 0;
		model <= error_message <= "Wait please ...";
		
		return model;
	}
	
	
	/**
	 * Clear error message
	 */
	FormModel clearErrorMessage()
	{
		FormModel model = this;
		
		model <= error_code <= 0;
		model <= error_message <= "";
		
		return model;
	}
	
	
	/**
	 * Set api result
	 */
	FormModel setApiResult(string action, ApiResult res)
	{
		if (res == null) return this;
		
		FormModel model = this;
		
		if (res.isSuccess())
		{
			Dict item = res["data", "item"];
			if (item)
			{
				model <= item <= item;
			}
		}
		
		/* Set validation result */
		if (res.data != null and res.data.has("validation_result"))
		{
			ValidationResult validation_result = new ValidationResult(res.data["validation_result"]);
			model <= validation_result <= validation_result;
		}
		else
		{
			model <= validation_result <= null;
		}
		
		model <= error_message <= res.getErrorMessage();
		model <= error_code <= res.getErrorCode();
		
		return model;
	}
	
	
	/**
	 * Returns form class
	 */
	string getErrorClass()
	{
		if (this.error_message == "") return "web_form__result--hide";
		if (this.error_code > 0) return "web_form__result--success";
		if (this.error_code < 0) return "web_form__result--error";
		return "";
	}
	
	
	/**
	 * Get field result
	 */
	Collection<string> getFieldResult(string field_name)
	{
		if (this.validation_result == null) return [];
		if (not this.validation_result.fields.has(field_name)) return [];
		return this.validation_result.fields[field_name];
	}
}
