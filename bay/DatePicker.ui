<!--
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class version="1.0"
	name="Runtime.Web.Input.DatePicker" extends="Runtime.Web.Component" 
	module="Runtime.Web.Input"
>


<use name="Runtime.DateTime" />
<use name="Runtime.Core.Message" />
<use name="Runtime.Web.Events.ChangeEvent" />


<style>
.input{
	width: 100%;
	padding: 6px 12px;
	background-color: ${ vars["colors", "default", "background"] };
	border: 1px ${ vars["colors", "default", "border"] } solid;
	outline: transparent;
}
</style>



<template name="render">
	%var string text = "";
	%var string value = (params != null) ? params.get("value", "") : "";
	%var string name = (params != null) ? params.get("name", "") : "";
	%var string type = (params != null) ? params.get("type", "input") : "";
	%var primitive tag = (params != null) ? params.get("@tag", "") : "";
	%var value = rtl::isEmpty(value) ? model : value;
	%if (not rtl::isEmpty(value)) { %var text = value.getDate( layout.tz ); }
	
	<input class='input' @tag={ tag } @event:ChangeEvent="onChange"
		name={ name } type={ type } value={ text } />
	
</template>



<script type="frontend">

/**
 * On change
 */
public void onChange(Message<ChangeEvent> msg)
{
	string value = msg.data.value;
	DateTime new_value = new DateTime
	{
		"y": rs::substr(value, 0, 4),
		"m": rs::substr(value, 5, 2),
		"d": rs::substr(value, 8, 2),
		"tz": this.controller.layout.tz,
	}
	msg.data = msg.data.copy{ "value": new_value };
	this.signal(msg.data);
}

</script>


</class>