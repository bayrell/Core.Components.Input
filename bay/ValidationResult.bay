/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.Crud;

use Runtime.BaseStruct;
use Runtime.Exceptions.ApiException;
use Runtime.Web.ApiResult;
use Runtime.Web.Bus;
use Runtime.Web.RenderContainer;
use Runtime.Web.Crud.FieldInfo;
use Runtime.Web.Crud.ValidationRule;


struct ValidationResult extends BaseStruct
{
	Dict<Collection<string>> fields = {};
	
	
	/**
	 * Returns true if is success
	 */
	bool isSuccess() => this.fields.keys().count() == 0;
	
	
	/**
	 * Append error message
	 */
	ValidationResult appendErrorMessage(list message)
	{
		ValidationResult res = this;
		string error_message = message[0];
		Collection<string> fields = message.removeFirstIm();
		
		for (int i=0; i<fields.count(); i++)
		{
			string field_name = fields[i];
			
			if (not res.fields.has(field_name))
			{
				res <= fields <= { field_name } <= [];
			}
			
			res <= fields <= { field_name } <= res.fields[field_name].pushIm(error_message);
		}
		
		return res;
	}
	
	
	/**
	 * Returns api result
	 */
	Dict getResult()
	{
		ApiException e = new ApiException("Ошибка. Проверьте корректность данных");
		return {
			"code": e.getErrorCode(),
			"message": e.getErrorMessage(),
			"error_name": e::getClassName(),
			"data": {
				"validation_result": this.toDict(),
			},
		};
	}
	
}