<!--
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class version="1.0"
	name="Runtime.Web.CRUD.CrudFilter" extends="Runtime.Web.CRUD.Form" 
	module="Runtime.Web.CRUD" model="Runtime.Web.CRUD.FormModel"
>

<use name="Runtime.Core.Message" />
<use name="Runtime.Web.LayoutModel" />
<use name="Runtime.Web.Input.Button" component="true" />
<use name="Runtime.Web.Events.ChangeEvent" />
<use name="Runtime.Web.Events.MouseClickEvent" />
<use name="Runtime.Web.CRUD.Form" component="true" />
<use name="Runtime.Web.CRUD.FormEvent" />
<use name="Runtime.Web.CRUD.FormModel" />


<style>
%form{
	width: 300px;
	margin-top: 10px;
}
%form_title{
	text-align: center;
	font-weight: bold;
	padding-bottom: 10px;
}
%form_buttons{
	text-align: center;
	margin-top: 10px;
}
%form_error{
	padding-top: 0px;
}
</style>


<template name="render">
	<div class="form filter" @key="form">
		%if (model != null)
		{
			%render
			[
				static::renderHeader(layout, model, params, content),
				static::renderContent(layout, model, params, content),
				static::renderButtons(layout, model, params, content),
			];
		}
	</div>
</template>


<template name="renderHeader">
	<div class='form_title'>{ _("Runtime.Web.CRUD", "Filter") }</div>
</template>


<template name="renderFieldError" args="LayoutModel layout, FormModel model, string field_name">
</template>


<template name="renderButtons">
	<div class='form_buttons'>
		<Button @event:MouseClickEvent="onSearchButtonClick">{ _("Runtime.Web.CRUD", "Search") }</Button>
	</div>
</template>


<script type="frontend">


/**
 * Patch class settings
 */
pure Dict patchSettings(LayoutModel layout, Dict field, Dict class_settings, var model, Dict params)
{
	bool show_select_value_filter = class_settings["show_select_value_filter"] |> default bool false;
	if (show_select_value_filter)
	{
		class_settings <= show_select_value <= true;
	}
	return class_settings;
}


/**
 * On mouse click
 */
async void onSearchButtonClick(Message<MouseClickEvent> msg)
{
	FormModel model = this.model();
	FormEvent event = new FormEvent
	{
		"event": FormEvent::ACTION_SEARCH,
		"item": model.item,
	};
	await this.signal(event);
}


</script>

</class>