/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.CRUD;

use Runtime.lib;
use Runtime.BaseStruct;


struct FieldInfo extends BaseStruct
{
	/* Common info */
	string api_name = "";
	string comment = "";
	string label = "";
	
	/* UI Class name */
	string class_name = "";
	string class_name_table = "";
	string class_name_form = "";
	string class_name_filter = "";
	Collection<string> class_name_extends = null;
	Dict class_settings = null;
	
	/* DB Type */
	string dbtype = "";
	bool auto_increment = false;
	bool primary = false;
	bool required = false;
	bool readonly = false;
	bool virtual = false;
	bool can_create = true;
	bool can_update = true;
	string group = "default";
	var default_value = null;
	
	/* Extra params */
	Dict foreign = {};
	Dict params = {};
	Dict table = {};
	
	
	/**
	 * Returns FieldInfo from Collection
	 */
	pure memorize FieldInfo getFieldInfo(Collection<FieldInfo> settings, string field_name)
		=> settings.findItem( lib::equalAttr("api_name", field_name) );
	
	
	/**
	 * Filter form
	 */
	pure bool filterForm(Collection<FieldInfo> settings, string form_type, string field_name)
	{
		FieldInfo info = static::getFieldInfo(settings, field_name);
		if (info == null) return false;
		if (form_type == "create" and info.can_create == false) return false;
		if (form_type == "update" and info.can_update == false) return false;
		return true;
	}
}