/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.CRUD.Rules;

use Runtime.BaseStruct;
use Runtime.Web.CRUD.Rules.Rule;


struct AllowFields extends Rule
{
	Collection<string> fields = null;
	pure Dict convertItem(AllowFields rule, Dict item, string action)
	{
		if (rule.fields == null) return item;
		
		/* Remove not allowed keys */
		Collection keys = item.keys();
		for (int i=0; i<keys.count(); i++)
		{
			string field_name = keys[i];
			if (rule.fields.indexOf(field_name) == -1)
			{
				item = item.removeIm(field_name);
			}
		}
		
		return item;
	}
	pure Dict processItem(Rule rule, Dict item, string action) => static::convertItem(rule, item, action);
}