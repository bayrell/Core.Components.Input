/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2021 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.CRUD.Rules;

use Runtime.BaseObject;
use Runtime.BaseStruct;
use Runtime.Web.CRUD.CrudApi;


class Rule extends BaseObject
{
	
	/**
	 * Init struct data
	 */
	protected static Dict _initData(BaseStruct old, Dict changed) => changed;
	
	
	
	/** 
	 * Constructor
	 */
	public void constructor(Dict obj = null)
	{
		parent();
		BaseStruct::_assign(this, null, obj);
	}
	
	
	
	/**
	 * Validate item
	 */
	string validate(CrudApi api, Dict item) => "";
	
	
	
	/**
	 * Convert search filter
	 */
	Collection convertSearchFilter(CrudApi api, Collection filter) => filter;
	
	
	
	/**
	 * Convert item before save to database
	 */
	async Dict convertItem(CrudApi api, Dict item, Dict old_item) => item;
	
	
	
	/**
	 * Process item before response
	 */
	async Dict processItem(CrudApi api, Dict item, Dict old_item) => item;
	
	
	
	/**
	 * Init api
	 */
	async void init(CrudApi api){}
	
	
	
	/**
	 * Before query
	 */
	async void beforeQuery(CrudApi api){}
	
	
	
	/**
	 * After query
	 */
	async void afterQuery(CrudApi api){}
	
	
	
	/**
	 * Create response
	 */
	async Dict createResponse(CrudApi api, Dict response) => response;
	
	
	
	/**
	 * After api
	 */
	async void after(CrudApi api){}
}